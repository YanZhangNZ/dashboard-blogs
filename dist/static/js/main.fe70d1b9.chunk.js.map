{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","console","log","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","email","password","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","signUp","firstName","LastName","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","lastName","CreateProject","createProject","cols","rows","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fe70d1b9.chunk.js","sourcesContent":["//no state, so can be a function component not class component\r\n\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create' >New Project</NavLink></li>\r\n            <li><span onClick={props.signOut} >Log Out</span></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);\r\n\r\n","\r\nexport const signIn = (credentials) => {\r\n    return (dispatch,getState,{getFirebase})=> {\r\n        const firebase = getFirebase();\r\n        //methord from firebase authentication\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({\r\n                type:'LOGIN_SUCCESS'\r\n            })\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type:'LOGIN_ERROR',err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return (dispatch,getState,{getFirebase})=> {\r\n        const firebase = getFirebase();\r\n        //methord from firebase authentication\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({\r\n                type:'SIGNOUT_SUCCESS'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch,getState,{getFirebase,getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=>{\r\n            console.log('sign up resp:',res);\r\n            //if 'user' not exist, firebase will create it\r\n            //create a new doc with id\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","//no state, so can be a function component not class component\r\n\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n \r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup' >Signup</NavLink></li>\r\n            <li><NavLink to='/signin' >Login</NavLink></li>\r\n        </ul>\r\n\r\n    )\r\n}\r\nexport default SignedOutLinks;","//no state, so can be a function component not class component\r\n\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\n// these two signin and signout components will show under some logic authentication\r\nconst Navbar = (props) => {\r\n    // console.log('props in navbar:',props);\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/>:<SignedOutLinks />\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Dashboard</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className='notifications'>\r\n                        { notifications && notifications.map(notification => (\r\n                            <li key={notification.id}>\r\n                                <span className=\"pink-text\">{notification.user}</span>\r\n                                <span>{notification.content}</span>\r\n                                <div className=\"grey-text note-date\">\r\n                                    {moment(notification.time.toDate()).fromNow()}\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    console.log('project summary:',project);\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">\r\n                    {project.title}\r\n                </span>\r\n                <p className=\"grey-text\">{project.content}</p>\r\n                <p>Posted by { project.authorFirstName } {project.authorLastName}</p>\r\n                <p className=\"grey-text\">created time:{moment(project.createdAt.toDate()).calendar()}</p>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n           {projects && projects.map(project => {\r\n               return(\r\n                   <Link to={'/project/'+project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                   </Link>\r\n               )\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React,{Component} from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    \r\n    render(){\r\n        const {projects,auth, notifications} = this.props;\r\n        //router guard\r\n        if(!auth.uid) return <Redirect to='./signin' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                \r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('dashboard get state from store and firestore:',state);\r\n    //initially we get data from initState. now we get from firestore\r\n    return{\r\n        // projects: state.project.projects\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications: state.firestore.ordered.notification\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects',orderBy:['createdAt','desc']},\r\n        {collection:'notification',limit:3,orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst ProjectDetails = (props) => {\r\n    \r\n    // const id = props.match && props.match.params.id;\r\n    console.log('project details props:',props);\r\n    const { project, auth} = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    if(project)\r\n    {return(\r\n        <div className=\"container section project-details\">            \r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{ project.title }</span>                    \r\n                    <p>{ project.content }</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by { project.authorFirstName } {project.authorLastName }</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )}else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst matStateToProps = (state,ownProps) => {\r\n    console.log('get state from store for project detail:',state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id]:null;\r\n    return{\r\n        project: project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(matStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component { \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })        \r\n    }\r\n    handleSubmit = (e) => {\r\n        debugger;\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n  \r\n\r\n    render(){\r\n        const { authError, auth} = this.props;\r\n        //if signed in, then jump to home page\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return(\r\n             <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\n//get state from state\r\nconst mapStateToProps = (state)=>{\r\n    debugger;\r\n    return{\r\n        //in reducer we have auth, and inside that we have authError\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    debugger;\r\n    return{\r\n        signIn:(creds)=>dispatch(signIn(creds))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component { \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n            firstName:'',\r\n            LastName:''\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })        \r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();        \r\n        // console.log('sign up');\r\n        this.props.signUp(this.state);\r\n    }\r\n  \r\n    render(){\r\n        const { auth, authError } = this.props;\r\n        //after signing up, jump to home page\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return(\r\n             <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        {authError ? <p>{authError}</p> : null }\r\n                    </div>\r\n                </form>\r\n             </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp:(newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component { \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            title:'',\r\n            content:'',\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n    }  \r\n\r\n    render(){\r\n        const { auth } = this.props;\r\n        console.log('create project props:',this.props);\r\n        if(!auth.uid) return <Redirect to = '/signin' />\r\n        return(\r\n             <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" cols=\"30\" rows=\"5\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n             </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project)=>dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);","\r\n\r\nexport const createProject = (project) => {\r\n    //without thunk,we return an action\r\n    // return{\r\n    //     type:'ADD_PROJECT',\r\n    //     project:project\r\n    // }\r\n    debugger;\r\n    return (dispatch,getState,{getFirebase,getFirestore}) => {\r\n        //with thunk, we return a function, so we make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt:new Date()\r\n        }).then(() => {\r\n            debugger;\r\n            dispatch({type:'CREATE_PROJECT',project});\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err});\r\n        })\r\n        \r\n    }\r\n};","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route, } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject'; \n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component = {Dashboard} />\n            <Route path='/project/:id' component = {ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initState = {\r\n    authError:null\r\n}\r\n\r\nconst authReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError:'login failed'};\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login successfully');\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout successfully');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('sign up success');\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('sign up fail');\r\n            return {\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects:[\r\n        {id:'1',title:'help me find peach',content:'blablabla'},\r\n        {id:'2',title:'collect all stars',content:'blablabla'},\r\n        {id:'3',title:'egg hunt with yoshi',content:'blablabla'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n   //reducer is to return the new state\r\n    switch(action.type){\r\n        \r\n        case 'CREATE_PROJECT':\r\n            console.log('create project',action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error',action.err);\r\n            return state; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n//combine reducers into one\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firebase:firebaseReducer,//for authentication\r\n    firestore:firestoreReducer//for data\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyC4aIIzSIKXO-MxHMihJuOeeqSnKkmElXI\",\r\n    authDomain: \"dashboard-27d73.firebaseapp.com\",\r\n    databaseURL: \"https://dashboard-27d73.firebaseio.com\",\r\n    projectId: \"dashboard-27d73\",\r\n    storageBucket: \"dashboard-27d73.appspot.com\",\r\n    messagingSenderId: \"264406961213\",\r\n    appId: \"1:264406961213:web:609ac01f29ceeab2\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({\r\n      timestampsInSnapshots:true\r\n  })\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore,applyMiddleware,compose} from 'redux';\n//when i import {rootReducer}, error happens saying attempted import error;\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n//combine reducers with provider\n//apply middleware thunk\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig,{useFirestoreForProfile:true,userProfile:'users',attachAuthIsReady:true})\n        )\n    );\n//not render to the DOM until auth is ready\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(\n        <Provider store={store}><App /></Provider>, \n        document.getElementById('root')\n    );\n})\n\n"],"sourceRoot":""}